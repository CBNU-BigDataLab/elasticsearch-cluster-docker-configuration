version: '2'
services:

# ELAISTCSEARCH CLUSTER
  elasticsearch1:
    build:
      context: elasticsearch1
    container_name: elasticsearch1
    environment:
      - cluster.name=Elasticsearch
      - transport.host=0.0.0.0
      - network.publish_host=0.0.0.0
      - transport.tcp.port=9300
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
      - ./elasticsearch1/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - esnet
  elasticsearch2:
    build:
      context: elasticsearch2
    container_name: elasticsearch2
    environment:
      - cluster.name=Elasticsearch
      - transport.host=0.0.0.0
      - network.publish_host=0.0.0.0
      - transport.tcp.port=9300
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
      - ./elasticsearch2/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - esnet

# KIBANA CONFIGURATION
  kibana:
    build:
      context: kibana/
    environment:
      ELASTICSEARCH_URL: http://elasticsearch1:9200
    volumes:
      - ./kibana/config/:/usr/share/kibana/config
    ports:
      - "5601:5601"
    networks:
      - esnet
    depends_on:
      - elasticsearch1
      - elasticsearch2


  # Cerebro Elasticsearch client
  cerebro:
#    build: cerebro/
    # Instead of building the image locally,  can use:
    image: yannart/cerebro:latest
    ports:
      - "9000:9000"
    networks:
      - esnet
    depends_on:
      - elasticsearch1
      - elasticsearch2

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local

networks:
  esnet:
